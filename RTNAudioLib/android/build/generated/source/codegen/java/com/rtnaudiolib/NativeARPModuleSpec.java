
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleJavaSpec.js
 *
 * @nolint
 */

package com.rtnaudiolib;

import com.facebook.proguard.annotations.DoNotStrip;
import com.facebook.react.bridge.Promise;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import com.facebook.react.bridge.ReactMethod;
import com.facebook.react.bridge.ReactModuleWithSpec;
import com.facebook.react.bridge.ReadableMap;
import com.facebook.react.turbomodule.core.interfaces.TurboModule;
import javax.annotation.Nonnull;

public abstract class NativeARPModuleSpec extends ReactContextBaseJavaModule implements ReactModuleWithSpec, TurboModule {
  public static final String NAME = "NativeARPModule";

  public NativeARPModuleSpec(ReactApplicationContext reactContext) {
    super(reactContext);
  }

  @Override
  public @Nonnull String getName() {
    return NAME;
  }

  @ReactMethod
  @DoNotStrip
  public abstract void startRecorder(String path, ReadableMap audioSet, boolean meteringEnabled, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void resumeRecorder(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void pauseRecorder(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void stopRecorder(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void setVolume(double volume, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void startPlayer(String path, ReadableMap httpHeaders, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void resumePlayer(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void pausePlayer(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void seekToPlayer(double time, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void stopPlayer(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void setSubscriptionDuration(double sec, Promise promise);
}
