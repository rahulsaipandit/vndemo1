
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleJniCpp.js
 */

#include "NativeARPModuleSpec.h"

namespace facebook {
namespace react {

static facebook::jsi::Value __hostFunction_NativeARPModuleSpecJSI_startRecorder(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "startRecorder", "(Ljava/lang/String;Lcom/facebook/react/bridge/ReadableMap;ZLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeARPModuleSpecJSI_resumeRecorder(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "resumeRecorder", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeARPModuleSpecJSI_pauseRecorder(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "pauseRecorder", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeARPModuleSpecJSI_stopRecorder(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "stopRecorder", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeARPModuleSpecJSI_setVolume(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "setVolume", "(DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeARPModuleSpecJSI_startPlayer(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "startPlayer", "(Ljava/lang/String;Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeARPModuleSpecJSI_resumePlayer(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "resumePlayer", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeARPModuleSpecJSI_pausePlayer(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "pausePlayer", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeARPModuleSpecJSI_seekToPlayer(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "seekToPlayer", "(DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeARPModuleSpecJSI_stopPlayer(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "stopPlayer", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeARPModuleSpecJSI_setSubscriptionDuration(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "setSubscriptionDuration", "(DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

NativeARPModuleSpecJSI::NativeARPModuleSpecJSI(const JavaTurboModule::InitParams &params)
  : JavaTurboModule(params) {
  methodMap_["startRecorder"] = MethodMetadata {3, __hostFunction_NativeARPModuleSpecJSI_startRecorder};
  methodMap_["resumeRecorder"] = MethodMetadata {0, __hostFunction_NativeARPModuleSpecJSI_resumeRecorder};
  methodMap_["pauseRecorder"] = MethodMetadata {0, __hostFunction_NativeARPModuleSpecJSI_pauseRecorder};
  methodMap_["stopRecorder"] = MethodMetadata {0, __hostFunction_NativeARPModuleSpecJSI_stopRecorder};
  methodMap_["setVolume"] = MethodMetadata {1, __hostFunction_NativeARPModuleSpecJSI_setVolume};
  methodMap_["startPlayer"] = MethodMetadata {2, __hostFunction_NativeARPModuleSpecJSI_startPlayer};
  methodMap_["resumePlayer"] = MethodMetadata {0, __hostFunction_NativeARPModuleSpecJSI_resumePlayer};
  methodMap_["pausePlayer"] = MethodMetadata {0, __hostFunction_NativeARPModuleSpecJSI_pausePlayer};
  methodMap_["seekToPlayer"] = MethodMetadata {1, __hostFunction_NativeARPModuleSpecJSI_seekToPlayer};
  methodMap_["stopPlayer"] = MethodMetadata {0, __hostFunction_NativeARPModuleSpecJSI_stopPlayer};
  methodMap_["setSubscriptionDuration"] = MethodMetadata {1, __hostFunction_NativeARPModuleSpecJSI_setSubscriptionDuration};
}

std::shared_ptr<TurboModule> NativeARPModuleSpec_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
  if (moduleName == "NativeARPModule") {
    return std::make_shared<NativeARPModuleSpecJSI>(params);
  }
  return nullptr;
}

} // namespace react
} // namespace facebook
